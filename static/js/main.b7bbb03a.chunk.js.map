{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","app/hooks.ts","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/counter/Counter.tsx","features/user-data/userDataSlice.ts","features/navbar/button.tsx","features/navbar/navbar.tsx","features/user-data/User.tsx","features/spacex/errorBox.tsx","features/spacex/launchCard.tsx","features/spacex/loadingBox.tsx","features/spacex/spacex.tsx","App.tsx","app/store.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","dispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","button","onClick","textbox","onChange","e","target","asyncButton","getState","surname","userData","setName","console","log","setSurname","selectUserName","selectUserSurname","Button","Navbar","to","href","type","id","User","setUserData","prev","placeholder","preventDefault","ErrorBox","role","LaunchCard","missionName","missionDescription","articleLink","videoLink","wikipedia","split","slice","pop","rel","src","frameBorder","allow","allowFullScreen","title","LoadingBox","LAUNCH_QUERY","gql","SpaceX","search","setSearch","useLazyQuery","fetchLaunches","loading","error","useEffect","timer","variables","clearTimeout","launches","map","item","mission_name","details","links","article_link","App","logo","alt","path","component","store","configureStore","reducer","counterReducer","userDataReducer","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b7bbb03a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = ():AppDispatch => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n\treturn new Promise<{ data: number }>((resolve) =>\n\t\tsetTimeout(() => resolve({ data: amount }), 500)\n\t)\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState, AppThunk } from '../../app/store'\nimport { fetchCount } from './counterAPI'\n\nexport interface CounterState {\n\tvalue: number;\n\tstatus: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n\tvalue:  0,\n\tstatus: 'idle',\n}\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n\t'counter/fetchCount',\n\tasync (amount: number) => {\n\t\tconst response = await fetchCount(amount)\n\t\t// The value we return becomes the `fulfilled` action payload\n\t\treturn response.data\n\t}\n)\n\nexport const counterSlice = createSlice({\n\tname:     'counter',\n\tinitialState,\n\t// The `reducers` field lets us define reducers and generate associated actions\n\treducers: {\n\t\tincrement: (state) => {\n\t\t\t// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n\t\t\t// doesn't actually mutate the state because it uses the Immer library,\n\t\t\t// which detects changes to a \"draft state\" and produces a brand new\n\t\t\t// immutable state based off those changes\n\t\t\tstate.value += 1\n\t\t},\n\t\tdecrement: (state) => {\n\t\t\tstate.value -= 1\n\t\t},\n\t\t// Use the PayloadAction type to declare the contents of `action.payload`\n\t\tincrementByAmount: (state, action: PayloadAction<number>) => {\n\t\t\tstate.value += action.payload\n\t\t},\n\t},\n\t// The `extraReducers` field lets the slice handle actions defined elsewhere,\n\t// including actions generated by createAsyncThunk or in other slices.\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(incrementAsync.pending, (state) => {\n\t\t\t\tstate.status = 'loading'\n\t\t\t})\n\t\t\t.addCase(incrementAsync.fulfilled, (state, action) => {\n\t\t\t\tstate.status = 'idle'\n\t\t\t\tstate.value += action.payload\n\t\t\t})\n\t},\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState):number => state.counter.value\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n\tdispatch,\n\tgetState\n) => {\n\tconst currentValue = selectCount(getState())\n\tif (currentValue % 2 === 1) {\n\t\tdispatch(incrementByAmount(amount))\n\t}\n}\n\nexport default counterSlice.reducer\n","import React, { useState } from 'react'\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport {\n\tdecrement,\n\tincrement,\n\tincrementByAmount,\n\tincrementAsync,\n\tincrementIfOdd,\n\tselectCount,\n} from './counterSlice'\nimport styles from './Counter.module.css'\n\nexport function Counter():JSX.Element {\n\tconst count = useAppSelector(selectCount)\n\tconst dispatch = useAppDispatch()\n\tconst [ incrementAmount, setIncrementAmount ] = useState('2')\n\n\tconst incrementValue = Number(incrementAmount) || 0\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={styles.row}>\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\taria-label=\"Decrement value\"\n\t\t\t\t\tonClick={() => dispatch(decrement())}\n\t\t\t\t>\n          -\n\t\t\t\t</button>\n\t\t\t\t<span className={styles.value}>{count}</span>\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\taria-label=\"Increment value\"\n\t\t\t\t\tonClick={() => dispatch(increment())}\n\t\t\t\t>\n          +\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className={styles.row}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.textbox}\n\t\t\t\t\taria-label=\"Set increment amount\"\n\t\t\t\t\tvalue={incrementAmount}\n\t\t\t\t\tonChange={(e) => setIncrementAmount(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\tonClick={() => dispatch(incrementByAmount(incrementValue))}\n\t\t\t\t>\n          Add Amount\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.asyncButton}\n\t\t\t\t\tonClick={() => dispatch(incrementAsync(incrementValue))}\n\t\t\t\t>\n          Add Async\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.button}\n\t\t\t\t\tonClick={() => dispatch(incrementIfOdd(incrementValue))}\n\t\t\t\t>\n          Add If Odd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\n\nexport interface UserData  {\n\tname:string,\n\tsurname:string\n}\n\nexport const initialState:UserData = {\n\tname:    '',\n\tsurname: ''\n}\n\n// Set user name\nexport const userData = createSlice({\n\tname:     'userData',\n\tinitialState,\n\treducers: {\n\t\tsetName: (state, action)=>{\n\t\t\tconsole.log('Updating redux name')\n\t\t\tstate.name = action.payload\n\t\t},\n\t\tsetSurname: (state, action)=>{\n\t\t\tconsole.log('Updtaing redux surname')\n\t\t\tstate.surname = action.payload\n\t\t}\n\t}\n    \n})\n\n\nexport const selectUserName = (state:RootState):string=>state.userData.name\nexport const selectUserSurname = (state:RootState):string=>state.userData.surname\n\n\nexport const { setName, setSurname } = userData.actions\n\nexport default userData.reducer\n\n","import React from 'react'\nimport { useAppDispatch } from '../../app/hooks'\nimport { setName, setSurname } from '../user-data/userDataSlice'\n\nfunction Button():JSX.Element {\n\n\tconst dispatch = useAppDispatch()\n\n\tconst logoutUser = ()=>{\n\t\tdispatch(setName(''))\n\t\tdispatch(setSurname(''))\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<button className=\"btn btn-secondary\" onClick={logoutUser}>Logout</button>\n\t\t</div>\n\t)\n}\n\nexport default Button\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAppSelector } from '../../app/hooks'\nimport { selectUserName, selectUserSurname } from '../user-data/userDataSlice'\nimport Button from './button'\n\n\nexport default function Navbar():JSX.Element  {\n\n\tconst name = useAppSelector(selectUserName)\n\tconst surname = useAppSelector(selectUserSurname)\n\n\treturn (\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t<Link to=\"/\" className=\"navbar-brand\" href=\"#\"><span className=\"mx-2\"> Navbar</span></Link>\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t</button>\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t\t<Link to=\"/counter\" className=\"nav-link\" href=\"#\">Counter</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<Link to=\"/introduction\" className=\"nav-link\" href=\"#\">User name</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<Link to=\"/spacex\" className=\"nav-link\" href=\"#\">SpaceX</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"nav-link float-end \">\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span className=\"\">{name} {surname}</span>\n\t\t\t\t<Button/>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}","import React, { MouseEvent, useState } from 'react'\nimport { useAppDispatch } from '../../app/hooks'\nimport { initialState, setName, setSurname, UserData } from './userDataSlice'\n\n\nfunction User():JSX.Element {\n\n\tconst [ userData, setUserData ] = useState<UserData>(initialState)\n\n\n\tconst dispatch = useAppDispatch()\n\n\tconst submitUserData = (e:MouseEvent<HTMLButtonElement>)=>{\n\t\te.preventDefault()\n\t\tdispatch(setName(userData.name))\n\t\tdispatch(setSurname(userData.surname))\n\t\tsetUserData(()=>{\n\t\t\tconsole.log('Flushing local user state')\n\t\t\treturn {\n\t\t\t\tname:    '',\n\t\t\t\tsurname: ''\n\t\t\t}\n\t\t})\n\n\t}\n    \n\n\treturn (\n\t\t<div className=\"container w-25\">\n\t\t\t<form>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input type=\"text\" value={userData.name} onChange={(e)=>setUserData(prev=>{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prev, name: e.target.value\n\t\t\t\t\t\t}\n\t\t\t\t\t})} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Name\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group mt-2\">\n\t\t\t\t\t<input type=\"text\" value={userData.surname} onChange={(e)=>setUserData(prev=>{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prev, surname: e.target.value\n\t\t\t\t\t\t}\n\t\t\t\t\t})} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Surname\"/>\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={submitUserData}>Submit</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default User\n","import React from 'react'\n\nfunction ErrorBox():JSX.Element {\n\treturn (\n\t\t<div className=\"alert alert-danger\" role=\"alert\">\n        Error fetching data :-(\n\t\t</div>\n\t)\n}\n\nexport default ErrorBox\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\ninterface CardProps {\n\tmissionName:string,\n\tmissionDescription:string\n\tarticleLink:string,\n\tvideoLink:string,\n\twikipedia:string\n}\n\nexport default function LaunchCard({ missionName, missionDescription, articleLink, videoLink, wikipedia }:CardProps):JSX.Element {\n\n\tconst baseUrl = 'https://www.youtube.com/embed/'\n\tconst videoId = videoLink?videoLink.split('/').slice(-1).pop():''\n\tconsole.log(videoLink)\n\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h5 className=\"card-header\">{missionName}</h5>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h5 className=\"card-title\">Mission details</h5>\n\t\t\t\t<p className=\"card-text\">{ missionDescription }</p>\n\t\t\t\t<h5 className=\"card-title\">More information</h5>\n\t\t\t\t<p className=\"card-text\">For article click <a href={articleLink} target=\"_blank\" rel=\"noreferrer\">here</a></p>\n\t\t\t\t<p className=\"card-text\">Wikipedia <a href={wikipedia} target=\"_blank\" rel=\"noreferrer\">article</a></p>\n\t\t\t\t<div className=\"card-text\">\n\t\t\t\t\t<iframe src=''\n\t\t\t\t\t\tframeBorder='0'\n\t\t\t\t\t\tallow='autoplay; encrypted-media'\n\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\ttitle='video'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\n\nfunction LoadingBox():JSX.Element {\n\treturn (\n\t\t<div className=\"alert alert-light\" role=\"alert\">\n\t\t\t<span className=\"text-primary m-2\">Fetching data</span>\n\t\t\t<div className=\"spinner-border text-primary\" role=\"status\"/>\n\t\t</div>\n\t)\n}\n\nexport default LoadingBox\n","import { gql, useLazyQuery } from '@apollo/client'\nimport React,{ FC, useEffect, useState } from 'react'\nimport ErrorBox from './errorBox'\nimport LaunchCard from './launchCard'\nimport LoadingBox from './loadingBox'\n\ninterface LaunchDetails {\n\tid:string,\n\tmission_name:string,\n\tmission_id:[],\n\tdetails:string,\n\tlaunch_success:boolean,\n\trocket:RocketDetails,\n\tlinks:LaunchLinks\n\n}\n\ninterface RocketDetails {\n\trocket_name:string\n}\n\ninterface LaunchLinks {\n\tarticle_link:string,\n\treddit_recovery:string,\n\tvideo_link:string,\n\twikipedia:string\n}\n\n\nconst LAUNCH_QUERY = gql`\n  query Launches($missionName:String!) {\n    launches(find:{mission_name:$missionName}) {\n    id\n    mission_name\n    mission_id\n    launch_success\n    details\n    rocket {\n      rocket_name\n    }\n    links {\n      article_link\n      reddit_recovery\n      video_link\n      wikipedia\n    }\n  }\n  }\n`\n\nconst SpaceX:FC = ()=> {\n\n\tconst [ search, setSearch ] = useState<string>('')\n\n\tconst [ fetchLaunches,{ loading, error, data } ] = useLazyQuery(LAUNCH_QUERY)\n\n\tuseEffect(()=>{\n\t\tconst timer = setTimeout(()=>{\n\t\t\tfetchLaunches({\n\t\t\t\tvariables: {\n\t\t\t\t\tmissionName: search\n\t\t\t\t}\n\t\t\t})\n\t\t},800)\n\t\treturn ()=>{\n\t\t\tclearTimeout(timer)\n\t\t}\n\t},[ search ])\n\n\treturn (\n\t\t<form>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<input type=\"text\" value={search} onChange={(e)=>setSearch(e.target.value)} className=\"form-control\"  aria-describedby=\"searchField\" placeholder=\"Search mission\"/>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4\">\n\t\t\t\t{ loading? <LoadingBox/> : null }\n\t\t\t\t{ error? <ErrorBox/> : null }\n\t\t\t\t{ data ? data.launches.map((item:LaunchDetails)=>{\n\t\t\t\t\treturn <LaunchCard \n\t\t\t\t\t\tkey={`${item.id}_${item.mission_name}`} \n\t\t\t\t\t\tmissionName={item.mission_name} \n\t\t\t\t\t\tmissionDescription={item.details}\n\t\t\t\t\t\tarticleLink={item.links.article_link}\n\t\t\t\t\t\tvideoLink={''}\n\t\t\t\t\t\twikipedia={item.links.wikipedia}\n\t\t\t\t\t/>\n\t\t\t\t}):null}\n\t\t\t\t\n\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default SpaceX\n","import React from 'react'\nimport logo from './logo.svg'\nimport { Counter } from './features/counter/Counter'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport Navbar from './features/navbar/navbar'\nimport User from './features/user-data/User'\nimport SpaceX from './features/spacex/spacex'\n\nfunction App():JSX.Element {\n\tconsole.log('I am rendering')\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar/>\n\t\t\t<header className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t</div>\n                \n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/counter\" component={Counter}/>\n\t\t\t\t\t<Route path=\"/introduction\" component={User}/>\n\t\t\t\t\t<Route path=\"/spacex\" component={SpaceX}/>\n\t\t\t\t</Switch>\n\t\t\t\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport counterReducer from '../features/counter/counterSlice'\nimport userDataReducer from '../features/user-data/userDataSlice'\n\nexport const store = configureStore({\n\treducer: {\n\t\tcounter:  counterReducer,\n\t\tuserData: userDataReducer\n\t},\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\nReturnType,\nRootState,\nunknown,\nAction<string>\n>;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle'\nimport { ApolloClient, \n\tApolloProvider, \n\tInMemoryCache } from '@apollo/client'\n\nconst client = new ApolloClient({\n\turi:   'https://api.spacex.land/graphql/',\n\tcache: new InMemoryCache()\n\n})\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>\n\t\t\t</ApolloProvider>\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n\n"],"sourceRoot":""}